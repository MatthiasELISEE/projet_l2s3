package main;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

import modele.*;
import vues.*;

/**
 * Un lien entre vue et mod√®le : les informations montr√©es √† l'utilisateur
 * refl√®tent l'√©tat du mod√®le et doivent √™tre maintenues √† jour.
 * 
 * Pour r√©aliser cette synchronisation, on peut suivre le sch√©ma de conception
 * observateur/observ√©, dont le principe est le suivant :
 *  - Un observateur (en l'occurrence la vue) est li√© √† un objet observ√© et se
 *    met √† jour pour refl√©ter les changement de l'observ√©.
 *  - Un observ√© est li√© √† un ensemble d'objets observateurs et les notifie de
 *    tout changement de son propre √©tat.
 *
 * Java fournit une interface [Observer] (observateur) et une classe
 * [Observable] (observ√©) assurant cette jonction.
 * Voici une mani√®re sommaire de les recoder.
 */

public class IleInterdite {
    /**
     * L'amor√ßage est fait en cr√©ant le mod√®le et la vue, par un simple appel
     * √† chaque constructeur.
     * Ici, le mod√®le est cr√©√© ind√©pendamment (il s'agit d'une partie autonome
     * de l'application), et la vue prend le mod√®le comme param√®tre (son
     * objectif est de faire le lien entre mod√®le et utilisateur).
     */
    public static void main(String[] args) {
    	
    	System.out.println("Bienvenue sur l'Œle interdite !");
    	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		System.out.print("Nombre de joueurs ? ");
		
		Modele modele = null;
		
		boolean success = false;
		while (!success) {
	        try{
	            modele = new Modele(Integer.parseInt(br.readLine()));
	            success=true;
	        } catch (IndexOutOfBoundsException e) {
	            System.err.print("Nombre de joueur trop grand !");
			}catch(NumberFormatException nfe){
	            System.err.print("Mais non ! Entrez un chiffre !");
	        } catch (IOException e1) {
				e1.printStackTrace();
	        }
		}
        Vue vue = new Vue(modele);
        System.out.println("Cliquez sur tour suivant !");
    }
}